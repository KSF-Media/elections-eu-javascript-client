/**
 * Election
 * KSF Media's election service
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CandidateMembership from './CandidateMembership';
import Gender from './Gender';
import I18N from './I18N';
import Language from './Language';
import Status from './Status';
import Votes from './Votes';

/**
 * The Candidate model module.
 * @module model/Candidate
 * @version 1.0.0
 */
class Candidate {
    /**
     * Constructs a new <code>Candidate</code>.
     * @alias module:model/Candidate
     * @param candidateNumber {Number} 
     */
    constructor(candidateNumber) { 
        
        Candidate.initialize(this, candidateNumber);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, candidateNumber) { 
        obj['candidateNumber'] = candidateNumber;
    }

    /**
     * Constructs a <code>Candidate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Candidate} obj Optional instance to populate.
     * @return {module:model/Candidate} The populated <code>Candidate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Candidate();

            if (data.hasOwnProperty('status')) {
                obj['status'] = Status.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('membership')) {
                obj['membership'] = CandidateMembership.constructFromObject(data['membership']);
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
            if (data.hasOwnProperty('age')) {
                obj['age'] = ApiClient.convertToType(data['age'], 'Number');
            }
            if (data.hasOwnProperty('comparativeIndex')) {
                obj['comparativeIndex'] = ApiClient.convertToType(data['comparativeIndex'], 'Number');
            }
            if (data.hasOwnProperty('votes')) {
                obj['votes'] = Votes.constructFromObject(data['votes']);
            }
            if (data.hasOwnProperty('candidateNumber')) {
                obj['candidateNumber'] = ApiClient.convertToType(data['candidateNumber'], 'Number');
            }
            if (data.hasOwnProperty('homeMunicipalityCode')) {
                obj['homeMunicipalityCode'] = ApiClient.convertToType(data['homeMunicipalityCode'], 'String');
            }
            if (data.hasOwnProperty('homeMunicipalityName')) {
                obj['homeMunicipalityName'] = I18N.constructFromObject(data['homeMunicipalityName']);
            }
            if (data.hasOwnProperty('gender')) {
                obj['gender'] = Gender.constructFromObject(data['gender']);
            }
            if (data.hasOwnProperty('occupation')) {
                obj['occupation'] = ApiClient.convertToType(data['occupation'], 'String');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = Language.constructFromObject(data['language']);
            }
            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('finalPosition')) {
                obj['finalPosition'] = ApiClient.convertToType(data['finalPosition'], 'Number');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/Status} status
 */
Candidate.prototype['status'] = undefined;

/**
 * @member {module:model/CandidateMembership} membership
 */
Candidate.prototype['membership'] = undefined;

/**
 * @member {String} lastName
 */
Candidate.prototype['lastName'] = undefined;

/**
 * @member {Number} age
 */
Candidate.prototype['age'] = undefined;

/**
 * @member {Number} comparativeIndex
 */
Candidate.prototype['comparativeIndex'] = undefined;

/**
 * @member {module:model/Votes} votes
 */
Candidate.prototype['votes'] = undefined;

/**
 * @member {Number} candidateNumber
 */
Candidate.prototype['candidateNumber'] = undefined;

/**
 * @member {String} homeMunicipalityCode
 */
Candidate.prototype['homeMunicipalityCode'] = undefined;

/**
 * @member {module:model/I18N} homeMunicipalityName
 */
Candidate.prototype['homeMunicipalityName'] = undefined;

/**
 * @member {module:model/Gender} gender
 */
Candidate.prototype['gender'] = undefined;

/**
 * @member {String} occupation
 */
Candidate.prototype['occupation'] = undefined;

/**
 * @member {module:model/Language} language
 */
Candidate.prototype['language'] = undefined;

/**
 * @member {String} firstName
 */
Candidate.prototype['firstName'] = undefined;

/**
 * @member {Number} finalPosition
 */
Candidate.prototype['finalPosition'] = undefined;

/**
 * @member {Number} position
 */
Candidate.prototype['position'] = undefined;






export default Candidate;

